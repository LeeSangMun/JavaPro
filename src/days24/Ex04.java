package days24;

/**
 * @author sangmun
 * @date 2023. 8. 16. - 오후 12:09:14
 * @subject
 * @content
 */
public class Ex04 {

	public static void main(String[] args) {
		/*
		 * [중첩 클래스와 중첩 인터페이스]
		 * 1. 클래스와 클래스들 간의 관계
		 * 		has-a관계
		 * 		is-a관계
		 * 2. 어떤 클래스가 특정클래스와 관계가 있다면
		 * 			A			   B
		 * 		B라는 클래스 안에 A 클래스를 선언한다.
		 * 3. 중첩 클래스(Nested Class)
		 * 4. 장점
		 * 		1) 두 클래스의 멤버들을 서로 쉽게 접근할 수 있다.
		 * 		2) 불필요한 관계 클래스를 감춤으로써 코드의 복잡성을 줄일 수 있다.
		 * 5. 예
		 * 6. 중첩 클래스의 종류 : 선언된 위치에 따라 구분
		 * 		1) 클래스의 멤버 선언
		 * 			- 인스턴스 멤버 클래스 // 객체를 생성해야 중첩클래스 사용가능
		 * 				static 필드, 메서드 선언 불가
		 * 				생성) A a = new A();
		 * 					  A.B b = a.new B();
		 * 
		 * 			- 정적 멤버 클래스 // 객체 생성없이 바로 접근가능
		 * 				// 모든 필드, 메서드 선언할 수 있다.
		 * 				생성) A.C c = new A.C();
		 * 
		 * 			A(외부)$B(내부)/class 클래스파일 생성
		 * 		2) 메서드의 내부에 선언
		 * 			- 로컬 클래스 // 메서드가 실행될 때에만 사용할 수 있다.
		 * 				static 필드, 메서드는 선언 x
		 * 
		 * 			A(외부)$1B(내부)/class 클래스파일 생성
		 * 
		 * 6-2. 예
		 */
	}

}
