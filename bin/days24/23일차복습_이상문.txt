1. 컬렉션 클래스의 종류 및 특징에 대해서 설명하세요.

Collection
	ㄴ List - 저장 순서o, 중복 o
		ㄴ ArrayList	- 배열을 기반. 순차적인 추가 삭제는 빠르다.
				  삽입, 삭제는 느리다.
		ㄴ LinkedList	- 노드끼리 서로 연결된 구조
				  삽입, 삭제 빠르다. 노드가 많을수록 접근시간이 길어진다.
		ㄴ Vector		- ArrayList랑 동일, 멀티스레드에 안전하다.
		ㄴ Stack		- LIFO구조. push(), pop()사용 
		ㄴ Queue		- FIFO구조. offer(), pull() 사용
		ㄴ Deque		- 큐에서 양방향으로 추가, 추출할 수 있다.
		ㄴ PriorityQueue	- 큐에 저장할 때 우선순위가 적용된다.

	ㄴ Set - 저장 순서x, 중복 x
		ㄴ HashSet	- 해싱 기법을 이용해서 저장한다.
				  순서를 유지하려면 LinkedHashSet을 사용한다.
		ㄴ TreeSet	- 이진 검색 트리 자료구조를 사용
				  범위검색, 정렬 등에 성능이 좋다.
				  
	
Map	 - (key, value)한쌍으로 되어 있고 Entry라 부른다.
	   저장순서 x. key는 중복 x, value 중복 o
	
	ㄴ HashTable	- HashMap이랑 동일. 멀티쓰레드에 안전 
	ㄴ HashMap	- 해싱기법을 사용해 저장. 검색 등 성능이 좋음
	ㄴ TreeMap	- 이진 검색 트리 자료구조로 key, value한쌍을 저장
	ㄴ Properties 	- key,value타입이 String,String이다.
			  HashTabled을 상속받았다.
			  
	
  
2. days19 패키지 안에 있는 
  "1. Java 팀 구성.txt" 파일을 읽어와서
  
   Map 컬렉션 클래스 사용해서
      key : 1조, 2조, 3조
      value :  직위(급)과 이름을 저장하는 클래스를 선언하고
               그 클래스 객체를 저장하는 컬렉션 클래스 사용   
   저장하고 출력하는 코딩을 하세요.           

public class Ex01 {
	private static HashMap<String, HashMap<String, String>> teams 
															= new HashMap<>();

	public static void main(String[] args) {
		String fileName = ".\\src\\days19\\1. Java 팀 구성.txt";
		try(FileReader fr = new FileReader(fileName);
				BufferedReader br = new BufferedReader(fr)) {
			String[] names = null;
			String line = null;
			int count = 0;
			while ((line = br.readLine()) != null && count < 3) {
				if(!teams.containsKey(line)) {
					teams.put(line, new HashMap<String, String>());
				}
				
				HashMap<String, String> team =  teams.get(line);
				line = br.readLine();
				names = line.split(",");
				for (int i = 0; i < names.length; i++) {
					if(names[i].trim().endsWith("(팀장)")) {
						team.put("팀장", names[i].replace("(팀장)", ""));
					} else {
						team.put("팀원" + i, names[i]);
					}
				} // for
				count++;
			}
			
			Set<Entry<String, HashMap<String, String>>> jos = teams.entrySet();
			Iterator<Entry<String, HashMap<String, String>>> ir = jos.iterator();
			while (ir.hasNext()) {
				Entry<String, HashMap<String, String>> entry = ir.next();
				String jo = entry.getKey();
				HashMap<String, String> team = entry.getValue();
				System.out.printf("[%s]\n", jo);
				Set<Entry<String, String>> teamOne = team.entrySet();
				Iterator<Entry<String, String>> ir2 = teamOne.iterator();
				while (ir2.hasNext()) {
					Entry<String, String> entry2 = ir2.next();
					String unit = entry2.getKey();
					String name = entry2.getValue();
					System.out.printf("\t%s - %s\n", unit, name);
				}
			}
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		} 
	}

}

     

3. Properties 컬렉션 클래스에 대해서 상세히 설명하세요.

	key,value타입이 String,String이다.
	HashTabled을 상속받았다.
	파일 작업을 쉽게 할 수 있다.
	환경 설정 정보도 얻을 수 있다.


	출력할 땐 store(), storeToXML()
	읽을 땐 load() 사용
	파일에 저장될 때  #으로 시작하는 것은 주석이고
	key=value 형태로 저장된다.
