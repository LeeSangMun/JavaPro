1. 용어 정리
  1) 컬렉션 ?	

	- 데이터의 집합
	
  2) 프레임워크( framework ) ? 

	- 표준화된 체계(뼈대, 체제)
	
  3) 컬렉션 프레임워크(JCF) ? 

	- 다수의 데이터의 집합을 관리하는 표준화된 체계

  4) 컬렉션 프레임워크의 핵심 인터페이스( 3가지 타입 ) 에 대해서 설명하세요.


	Collection
	   ㄴ  List - 저장순서 o, 중복허용 o  // ArrayList, LikedList, Stack, Vector
	   ㄴ  Set - 저장순서 x, 중복허용 x  // HashSet, TreeSet

	Map - 	(key, value) 쌍인 entry로 되어있음
		저장순서x, key는 중복허용x, value는 중복허용 o
		// HashMap, TreeMap, HashTable, Properties

   
2. 현재 날짜와 시간 정보를   LocalDateTime 클래스를 사용해서 
     아래와 같은 형식으로 출력하세요 . 
  [출력형식]
  2023/08/11 금요일   07:02:32.259

	public static void main(String[] args) {
		String pattern = "yyyy/MM/dd E요일   hh:mm:ss.SSS";
		
		DateTimeFormatter dtf = DateTimeFormatter.ofPattern(pattern );
		LocalDateTime dt = LocalDateTime.now();
		String sdt = dtf.format(dt);
		System.out.println(sdt);
	}
  
2-2. String s = "2023.08.11 (금)" 문자열을 LocalDate 클래스로 변환시키세요.

	public static void main(String[] args) {
		String s = "2023.08.11 (금)";
		String pattern = "yyyy.MM.dd (E)";
		LocalDate date = LocalDate.parse(s, DateTimeFormatter.ofPattern(pattern));
		System.out.println(date);
	}

3. ArrayList 에 대해서 설명하세요 .
3-2. ArrayList 컬렉션 클래스를 사용해서
  1) 팀원들의 이름을 요소로 추가  
  2) 반복자를 사용해서 모든 요소(팀원들) 출력 
  3) 팀원들의 인원수를 출력
  4) 두 번째 팀원이 누구인지 확인 후 "홍길동" 팀원으로 수정
  5) "홍길동" 팀원의 존재 유무를 확인 후 삭제
  6) "김"씨 팀원들만 삭제 후 확인.

	public static void main(String[] args) {
		ArrayList list = new ArrayList();
		
		// [1]
		list.add("박정호");
		list.add("이상문");
		list.add("이주영");
		list.add("정하영");
		list.add("이동현");
		list.add("주강민");
//		list.add("김ㅇㅇ");
		
		// [2]
		Iterator ir = list.iterator();
		while(ir.hasNext()) {
			String name = (String)ir.next();
			System.out.println(name);
		}
		
		// [3]
		System.out.println(list.size());
		
		// [4]
		System.out.println(list.get(1));
		list.set(1, "홍길동");
		System.out.println(list);
		
		// [5]
		int index = list.indexOf("홍길동");
		if(index != -1) {
			list.remove(index);
		}
		
		// [6]
		ir = list.iterator();
		while (ir.hasNext()) {
			String name = (String) ir.next();
			if(name.matches("김.*")) {
				ir.remove();
			}
		}
		System.out.println(list);
	}

4. java.time.LocalDateTime 클래스 사용
   1) 설문 시작일 : 23.8.10   9:00:00
   2) 설문 종료일 : 23.8.15  18:00:00
   
   지금 현재 설문 가능여부에 대해서 출력하세요.  ( 가능, 불가능 )
   
	public static void main(String[] args) {
		LocalDateTime sDay = LocalDateTime.of(2023, 8, 10, 8, 59, 59, 999999999);
		LocalDateTime eDay = LocalDateTime.of(2023, 8, 15, 18, 0, 0, 000000001);
		LocalDateTime today = LocalDateTime.now();
		
		if(today.isAfter(sDay) && today.isBefore(eDay)) {
			System.out.println("설문조사 가능");
		} else {
			System.out.println("설문조가 불가능");
		}
	}

  
5. 이름, 나이 필드를 가진 Person 클래스를 선언하고
   ArrayList 컬렉션 클래스에  Person 객체를 요소로 추가하고 
   이름으로 오름차순 정렬해서    출력하는 코딩을 하세요 ..    
   
  
public class Ex01 {

	public static void main(String[] args) {
		ArrayList list = new ArrayList();
		list.add(new Person("홍길동", 15));
		list.add(new Person("이순신", 21));
		list.add(new Person("임경재", 26));
		System.out.println(list);
		
		Collections.sort(list);
		System.out.println(list);
	}

}

class Person implements Comparable<Person> {
	String name;
	int age;
	
	public Person(String name, int age) {
		super();
		this.name = name;
		this.age = age;
	}

	@Override
	public String toString() {
		return "Person [name=" + name + ", age=" + age + "]";
	}
	
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public int getAge() {
		return age;
	}

	public void setAge(int age) {
		this.age = age;
	}

	@Override
	public int compareTo(Person o) {	
		return this.name.compareTo(o.getName());
	}
	
	
}
  
  
    