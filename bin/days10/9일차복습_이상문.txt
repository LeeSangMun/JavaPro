1.  주민등록번호를 검증( check ) 하는 함수를 선언하세요.
    1) 기능         :  isRRNCheck
    2) 매개변수 :  String rrn
    3) 리턴값 및 리턴자료형 : boolean
        올바른 주민등록번호일 때 true 반환
        잘못된 주민등록번호일 때 false 반환 

	public static boolean isRRNCheck(String rrn) {
		int[] unit = {2,3,4,5,6,7,0,8,9,2,3,4,5};
		int total = 0;
		
		for (int i = 0; i < unit.length; i++) {
			total += (rrn.charAt(i)-'0')*unit[i];
		} // for
		
		int check = (11- (total%11))%10;
		int lastNum = rrn.charAt(rrn.length()-1) - '0';
		
		return check == lastNum;
	}
        
2. 10진수 정수를 입력받아서 8진수로 출력
2-2. 10진수 정수를 입력받아서 16진수로 출력

	1)
	public static void main(String[] args) {
		try (Scanner sc = new Scanner(System.in)){
			System.out.print("> 10진수 정수를 입력하세요 ? ");
			int n = sc.nextInt();
			int x = n;
			String s = "";
			while(x != 0) {
				s = x%8 + s;
				x /= 8;
			}
			System.out.printf("10진수 %d -> 8진수 %s", n, "0" + s);
		} catch(Exception e) {
			e.printStackTrace();
		}
	}

	2)
	public static void main(String[] args) {
		try (Scanner sc = new Scanner(System.in)){
			char[] ch = {'a', 'b', 'c', 'd', 'e', 'f'};
			
			System.out.print("> 10진수 정수를 입력하세요 ? ");
			int n = sc.nextInt();
			int x = n;
			String s = "";
			while(x != 0) {
				s =  (x%16 >= 10) ? ch[x%16-10] + "" : x%16+ s;
				x /= 16;
			}
			System.out.printf("10진수 %d -> 16진수 %s", n, "0x" + s);
		} catch(Exception e) {
			e.printStackTrace();
		}
	}



3. 주민등록번호를 입력받아서 만나이 계산해서 반환하는 함수 선언
   ( 
      함수 프로토타입(Prototype)
      int getAmericanAge( String rrn ) 
   )          

	public static int getAmericanAge(String rrn) {
		int americanAge = getCountingAge(rrn) - 1;
		int myMMdd = Integer.parseInt(getBirth(rrn).substring(4).trim().replace(".", ""));
		Calendar c = Calendar.getInstance();
		int month = c.get(Calendar.MONTH) + 1;
		int date = c.get(Calendar.DATE);
		int thisMMdd = month*100 + date;
		
		boolean flag = myMMdd - thisMMdd >= 0;
		
		return americanAge + (flag ? 0 : -1);
	}
        
4. 달력을 그리기 위한 아래 함수(메서드)들를 선언하세요 .
  1) private static int getDayOfWeek(int year, int month, int day)
  2) private static int getTotalDays(int year, int month, int day) 
  3) private static int getLastDay(int year, int month)         
    

   	private static int getDayOfWeek(int year, int month, int day) {
		int dayOfWeek = getTotalDays(year, month, day)%7;
		
		return dayOfWeek;
	}
	
	private static int getTotalDays(int year, int month, int day) {
		int totalDays = (year-1)*365 + (year-1)/4 - (year-1)/100 + (year-1)/400;
		
		for(int i=1; i<month; i++) {
			totalDays += getLastDay(year, i);
		}
		
		totalDays += day;
		
		return totalDays;
	}
	
	private static int getLastDay(int year, int month) {
		int[] months = {31,28,31,30,31,30,31,31,30,31,30,31};
		
		int lastDay = months[month-1];
		if(month==2 && days08.Ex05.isLeapYear(year))
			lastDay++;
		
		return lastDay;
	}
        
        
        
        
        
       