1. 용어 정리
  1) 객체 지향적 프로그래밍( OOP ) 
	무엇이든 객체로 만들어 프로그래밍하는 것
  2) 객체 
	클래스로 실재 존재하는 것, 사물이나 개념의 객체
	Scanner scanner; -> 클래스 자료형으로 선언된 객체       
  3) 클래스
	객체를 만들기 위한 설계도       
  4) 인스턴스       
	생성된 객체
  5) 인스턴스화  
	클래스로 객체를 생성하는 과정
  6) 객체의 구성요소 
	필드, 메서드
  7) 멤버 
	멤버변수 + 멤버함수
  8) 멤버변수
	클래스 내에 생성되는 변수(클래스 변수, 인스턴스 변수)
  9) 멤버함수
	클래스 내에 생성되는 메서드(클래스 메서드, 인스턴스 메서드)
  10) 필드
	
  11) 메서드
	 
  12) 변수 
	  변하는 수, 값을 가지고 있다.        
  13) 참조변수
	  new 연산자에 의해 힙에 메모리가 할당되고 할당된 주소를 참조하고 있다.
  
2. 클래스의 특징( OOP의 특징 )에 대해서 설명하세요.

	은닉화, 캡슐화, 상속, 다형성, 추상화   

3. 클래스의 설계 과정에 대해서 설명하세요.  
	
	1. 객체의 구성요소 파악, 목록작성(필드, 메서드)
	2. 클래스 선언
	[접근제어자][기타제어자]class 클래스명 [extends 클래스명][implements 인터페이스명...] {
		// 필드
		// 메서드
	}
	3. 클래스 생성
	4. 문제점 파악
	5. 상용화
	6. 버전관리

4. 클래스의 [멤버(필드, 메서드, 생성자 )]를 접근하는 방법에 대해서 설명하세요.

	인스턴스 변수 - 객체명.필드명, 객체명.메서드명, new 클래스의 생성자
 
5. NullPointerException 예외(에러)는 언제 발생하는 가 ?

	참조변수가 null을 가리킬 때

6. 클래스의 선언 형식

	[접근제어자][기타제어자]class 클래스명 [extends 클래스명][implements 인터페이스명...] {
		// 필드
		// 메서드
	}
  
7. 클래스 앞의 접근지정자의 종류에 대해서 설명하세요.

	public - 패키지 내부, 외부 어디서든 상속, 참조 가능
	default - 패키지 내부에서만 상속, 참조가능

	// 독립클래스에서는 사용 불가. 내부 클래스에서만 사용 가능
	protected - 패키지 내부와 패키지 외부 상속관계에서 상속,참조가능
	private - 같은 클래스에서만 상속,참조가능

8. 멤버 앞의 접근지정자의 종류에 대해서 설명하세요.

	public - 패키지 내부, 외부 어디서든 참조 가능
	protected - 패키지 내부에서만 참조가능
	default - 패키지 내부와 패키지 외부에서 상속관계일 때 참조가능
	private - 같은 클래스에서만 참조가능

9. 클래스 선언할 때 기타제어자 종류에 대해서 설명하세요.

	abstract	- 추상 클래스로 만듬
	final	- 상속 할 수 없는 클래스로 만듬
	static	- 내부 클래스에서만 사용가능

10. 클래스(객체) 복사(copy)와 복제(clone)에 대해서 설명하세요. 

	복사는 서로 같은 주소를 가리켜서 한 객체에서 바뀌면 다른 객체도 바뀐다.
	Point p = new Point();
	Point p2 = p;

	복제는 클래스 멤버변수의 값을 복제해서 한 곳에서 값을 바꿔도 다른 한곳에 영향을 미치지 않는다
	Point p = new Point();
	Point p2 = new Point();
	p2.x = p.x;
	p2.y = p.y;

11. 클래스 배열( 객체 배열 ) 에 대해서 설명하세요.

	Point[] pArr = new Point[3];

	0x100
	[   null   ][null][null]        pArr[0x100]

	pArr[0] = new Point();

	0x100
	[   0x200l   ][null][null]        pArr[0x100]

	pArr[0]
	[x][y][printXY()]		<-		printXY()
	0x200
	

12. 선언되는 위치를 기준으로 변수 구분하고, 생성시기, 소멸시기에 대해서 설명하세요. 

	지역 변수 - 함수나 제어문 내에서 생성되고 } 을 만나면 소멸 된다.
	인스턴스 변수 - new 연산자로 인해 객체가 생성될 때 만들어지고 클래스가 없어지면 소멸된다.
	클래스 변수 - 클래스가 메모리에 올라 갈 때 만들어지고 프로그램이 종료되면 없어진다.
      






